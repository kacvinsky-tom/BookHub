@using Core.Services
@model WebMVC.Areas.Admin.ViewModels.Book.BookCreateViewModel
@inject PublisherService PublisherService
@inject AuthorService AuthorService
@inject GenreService GenreService

@{
    ViewBag.Title = "Create book";
    Layout = "_Layout";
    var genreList = (await GenreService.GetSimpleList()).Select(g => new SelectListItem(g.Value, g.Id.ToString()));
    var authorList = (await AuthorService.GetSimpleList()).Select(a => new SelectListItem(a.Value, a.Id.ToString()));
    var publisherList = (await PublisherService.GetSimpleList()).Select(p => new SelectListItem(p.Value, p.Id.ToString()));
}

<div class="h-full w-full flex justify-center align-center">
    <div class="card bg-base-200 shadow-lg rounded-2xl lg:max-w-5xl w-full">
        <div class="card-body">
            <h2 class="font-bold text-xl">Create book</h2>
            <form asp-action="Create" method="post" class="grid gap-y-2 gap-x-4 grid-cols-1">
                @Html.ValidationSummary(false, "", new { @class = "text-red-500" })
                <div class="form-control">
                    <label class="label">
                        @Html.LabelFor(b => b.Title, new { @class = "label-text" })
                    </label>
                    @Html.TextBoxFor(b => b.Title, new { @class = "input input-bordered" })
                    <label class="label">
                        @Html.ValidationMessageFor(b => b.Title, "", new { @class = "label-text text-red-500" })
                    </label>
                </div>
                <div class="form-control">
                    <label class="label">
                        @Html.LabelFor(b => b.ISBN, new { @class = "label-text" })
                    </label>
                    @Html.TextBoxFor(b => b.ISBN, new { @class = "input input-bordered" })
                    <label class="label">
                        @Html.ValidationMessageFor(b => b.ISBN, "", new { @class = "label-text text-red-500" })
                    </label>
                </div>
                <div class="form-control">
                    <label class="label">
                        @Html.LabelFor(b => b.Description, new { @class = "label-text" })
                    </label>
                    @Html.TextAreaFor(b => b.Description, new { @class = "textarea textarea-bordered", rows = 3 })
                    <label class="label">
                        @Html.ValidationMessageFor(b => b.Description, "", new { @class = "label-text text-red-500" })
                    </label>
                </div>
                <div class="form-control">
                    <label class="label">
                        @Html.LabelFor(b => b.Image, new { @class = "label-text" })
                    </label>
                    @Html.TextBoxFor(b => b.Image, new { @class = "input input-bordered" })
                    <label class="label">
                        @Html.ValidationMessageFor(b => b.Image, "", new { @class = "label-text text-red-500" })
                    </label>
                </div>
                <div class="form-control">
                    <label class="label">
                        @Html.LabelFor(b => b.Price, new { @class = "label-text" })
                    </label>
                    @Html.TextBoxFor(b => b.Price, new { @class = "input input-bordered" })
                    <label class="label">
                        @Html.ValidationMessageFor(b => b.Price, "", new { @class = "label-text text-red-500" })
                    </label>
                </div>
                <div class="form-control">
                    <label class="label">
                        @Html.LabelFor(b => b.Quantity, new { @class = "label-text" })
                    </label>
                    @Html.TextBoxFor(b => b.Quantity, new { @class = "input input-bordered" })
                    <label class="label">
                        @Html.ValidationMessageFor(b => b.Quantity, "", new { @class = "label-text text-red-500" })
                    </label>
                </div>
                <div class="form-control">
                    <label class="label">
                        @Html.LabelFor(b => b.ReleaseYear, new { @class = "label-text" })
                    </label>
                    @Html.TextBoxFor(b => b.ReleaseYear, new { @class = "input input-bordered" })
                    <label class="label">
                        @Html.ValidationMessageFor(b => b.ReleaseYear, "", new { @class = "label-text text-red-500" })
                    </label>
                </div>
                <div class="form-control">
                    <label class="label">
                        @Html.LabelFor(b => b.PublisherId, new { @class = "label-text" })
                    </label>
                    @Html.DropDownListFor(b => b.PublisherId, publisherList, new { @class = "select select-bordered" })
                    <label class="label">
                        @Html.ValidationMessageFor(b => b.PublisherId, "", new { @class = "label-text text-red-500" })
                    </label>
                </div>
                <div class="form-control">
                    <label class="label">
                        @Html.LabelFor(b => b.AuthorIds, new { @class = "label-text" })
                    </label>
                    @Html.ListBoxFor(b => b.AuthorIds, authorList, new { @class = "input input-bordered h-48" })
                    <label class="label">
                        @Html.ValidationMessageFor(b => b.AuthorIds, "", new { @class = "label-text text-red-500" })
                    </label>
                </div>
                <div class="form-control">
                    <label class="label">
                        @Html.LabelFor(b => b.GenreIds, new { @class = "label-text" })
                    </label>
                    @Html.ListBoxFor(b => b.GenreIds, genreList, new { @class = "input input-bordered h-48" })
                    <label class="label">
                        @Html.ValidationMessageFor(b => b.GenreIds, "", new { @class = "label-text text-red-500" })
                    </label>
                </div>
                <div class="form-control">
                    <label class="label">
                        @Html.LabelFor(b => b.PrimaryGenreId, new { @class = "label-text" })
                    </label>
                    @Html.DropDownListFor(b => b.PrimaryGenreId, genreList, new { @class = "select select-bordered" })
                    <label class="label">
                        @Html.ValidationMessageFor(b => b.PrimaryGenreId, "", new { @class = "label-text text-red-500" })
                    </label>
                </div>
                <button class="btn btn-success">
                    <i class="bi bi-plus-circle"></i>
                    Create
                </button>
            </form>
        </div>
    </div>
</div>
